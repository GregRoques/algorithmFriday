# ====================PROBLEM 1======================

# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.

# total_sum = 0

# for i in range(1000):
#     if(i % 5 == 0 or i % 3 == 0):
#         total_sum = total_sum + i # total_sum +=1
# print total_sum

# ====================PROBLEM 2======================

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# fib1 = 1
# fib2 = 2
# sumTotal = 0
# while (sumTotal < 4000000):
#     newFib = fib1 + fib2 
#     fib1 = fib2
#     fib2 = newFib
#     if (fib1 % 2 == 0):
#         sumTotal += fib1
# print sumTotal

# ====================PROBLEM 3======================

# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?

number = 600851475143

i = 2

while(i < number):
    smallest_divisor = []
    for j in range (2, i - 1):
        if (i % j  == 0):
            if (number % i == 0):
                smallest_divisor.append(i)
i += 1
print smallest_divisor.pop()




